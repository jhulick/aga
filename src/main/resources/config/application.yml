# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overriden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    instance:
        appname: gateway
        instanceId: gateway:${spring.application.instance_id:${random.value}}
        prefer-ip-address: true
    client:
        enabled: true
        healthcheck:
            enabled: true
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/


zuul:

    # The rate limit filter is enabled when zuul.ratelimit.enabled is present.
    # It has an inmemory and a redis based implementation. The redis
    # implementation will work with multiple instances.
    #
    # There's two policies supported: anonymous and authenticated
    #
    # The policies control how we create the buckets. Anonymous will use a
    # global bucket counter, the authenticated uses the security principal
    # as the key, so each authenticated user has its own counter.
    ratelimit:
        enabled: true
        policies:
            anonymous:
                refreshInterval: 60
                limit: 1000
            authenticated:
                refreshInterval: 60
                limit: 2000

ribbon:
    eureka:
        enabled: true

app:
    admin.userName: admin
    service:
        security: http://localhost:8080/login/cas
        home: http://localhost:8080/

spring:
    application:
        name: gateway
    jpa:
        open-in-view: false
        hibernate:
            ddl-auto: none
            naming-strategy: org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy
    messages:
        basename: classpath:/i18n/messages
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: XHTML

    cas:
        url.prefix: http://localhost:9002/cas/
        service:
            login: http://localhost:9002/cas/login
            logout: http://localhost:9002/cas/logout
    oauth2:
        sso:
            home:
                secure: false
                path: /,/**/*.html
        client:
            accessTokenUri: http://localhost:9999/uaa/oauth/token
            userAuthorizationUri: http://localhost:9999/uaa/oauth/authorize
            clientId: maxsecurityapp
            clientSecret: mySecretOAuthSecret
        resource:
            userInfoUri: http://localhost:9999/uaa/api/user

security:
    basic:
        enabled: false

# ===================================================================
# max specific properties
# ===================================================================

max:
    async:
        corePoolSize: 2
        maxPoolSize: 50
        queueCapacity: 10000
    #cors: #By default CORS are not enabled. Uncomment to enable.
        #allowed-origins: "*"
        #allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        #allowed-headers: "*"
        #exposed-headers:
        #allow-credentials: true
        #max-age: 1800
    security:
        rememberme:
            # security key (this key should be unique for your application, and kept secret)
            key: edc287a4796b99146592a0ae687ea3af6739b359
    swagger:
        title: MAX Gateway API
        description: MAX Gateway API documentation
        version: 0.0.1
        termsOfServiceUrl:
        contact:
        license:
        licenseUrl:
